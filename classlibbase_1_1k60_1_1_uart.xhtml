<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.8"/>
<title>libsccc: libbase::k60::Uart Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">libsccc
   &#160;<span id="projectnumber">fauxstess cupcake r0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.8 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Friends</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacelibbase.xhtml">libbase</a></li><li class="navelem"><a class="el" href="namespacelibbase_1_1k60.xhtml">k60</a></li><li class="navelem"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml">Uart</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">libbase::k60::Uart Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;uart.h&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structlibbase_1_1k60_1_1_uart_1_1_config.xhtml">Config</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ae98fa66c46d52919d72909275577a021"><td class="memItemLeft" align="right" valign="top">typedef std::function&lt; void(<a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml">Uart</a> <br class="typebreak" />
*uart)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#ae98fa66c46d52919d72909275577a021">OnTxEmptyListener</a></td></tr>
<tr class="separator:ae98fa66c46d52919d72909275577a021"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb29dd9916bf7eeef4589176deff8a44"><td class="memItemLeft" align="right" valign="top">typedef std::function&lt; void(<a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml">Uart</a> <br class="typebreak" />
*uart)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#afb29dd9916bf7eeef4589176deff8a44">OnRxFullListener</a></td></tr>
<tr class="separator:afb29dd9916bf7eeef4589176deff8a44"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a392f8ded9dc820afbb6e3c780823a052"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#a392f8ded9dc820afbb6e3c780823a052">Uart</a> (const <a class="el" href="structlibbase_1_1k60_1_1_uart_1_1_config.xhtml">Config</a> &amp;config)</td></tr>
<tr class="separator:a392f8ded9dc820afbb6e3c780823a052"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a3c1fb5f5f8cdade3b6ed1c0f8afe3b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#a9a3c1fb5f5f8cdade3b6ed1c0f8afe3b">Uart</a> (nullptr_t)</td></tr>
<tr class="separator:a9a3c1fb5f5f8cdade3b6ed1c0f8afe3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5001429e8da8465521213ffa4df810ed"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#a5001429e8da8465521213ffa4df810ed">Uart</a> (const <a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml">Uart</a> &amp;)=delete</td></tr>
<tr class="separator:a5001429e8da8465521213ffa4df810ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa71070ad68d14e44e7879ca2a5a407d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#afa71070ad68d14e44e7879ca2a5a407d">Uart</a> (<a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml">Uart</a> &amp;&amp;rhs)</td></tr>
<tr class="separator:afa71070ad68d14e44e7879ca2a5a407d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a632fb0e0392d7e90a291ced4a6646947"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#a632fb0e0392d7e90a291ced4a6646947">~Uart</a> ()</td></tr>
<tr class="separator:a632fb0e0392d7e90a291ced4a6646947"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acea0cb2af286ece463983251687de673"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml">Uart</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#acea0cb2af286ece463983251687de673">operator=</a> (const <a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml">Uart</a> &amp;)=delete</td></tr>
<tr class="separator:acea0cb2af286ece463983251687de673"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4de791529fe596cfbda5913982d9a81"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml">Uart</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#aa4de791529fe596cfbda5913982d9a81">operator=</a> (<a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml">Uart</a> &amp;&amp;rhs)</td></tr>
<tr class="separator:aa4de791529fe596cfbda5913982d9a81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8b3240d03ae4bfb649412ce5e8a777e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#aa8b3240d03ae4bfb649412ce5e8a777e">operator bool</a> () const </td></tr>
<tr class="separator:aa8b3240d03ae4bfb649412ce5e8a777e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b68687d400955dfa3f06ff151f7eef6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#a2b68687d400955dfa3f06ff151f7eef6">SetLoopMode</a> (const bool flag)</td></tr>
<tr class="separator:a2b68687d400955dfa3f06ff151f7eef6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ea0e2a79e80a81145db9050e10ea697"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#a3ea0e2a79e80a81145db9050e10ea697">GetAvailableBytes</a> () const </td></tr>
<tr class="separator:a3ea0e2a79e80a81145db9050e10ea697"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb8135a823d1b24088e58566825595aa"><td class="memItemLeft" align="right" valign="top">Byte&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#afb8135a823d1b24088e58566825595aa">GetByte</a> () const </td></tr>
<tr class="separator:afb8135a823d1b24088e58566825595aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a625e1881f0b718b87c5c815ad35ed30f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#a625e1881f0b718b87c5c815ad35ed30f">PeekByte</a> (Byte *out_byte) const </td></tr>
<tr class="separator:a625e1881f0b718b87c5c815ad35ed30f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22fdbc7c3f4dbad98efab2c68d6006a3"><td class="memItemLeft" align="right" valign="top">std::vector&lt; Byte &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#a22fdbc7c3f4dbad98efab2c68d6006a3">GetBytes</a> () const </td></tr>
<tr class="separator:a22fdbc7c3f4dbad98efab2c68d6006a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa14c7bc27524b24df91d9e8ab05bb337"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#aa14c7bc27524b24df91d9e8ab05bb337">PeekBytes</a> (std::vector&lt; Byte &gt; *out_bytes) const </td></tr>
<tr class="separator:aa14c7bc27524b24df91d9e8ab05bb337"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fdfb9bd936d89d3a681694093a01810"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#a1fdfb9bd936d89d3a681694093a01810">SendByte</a> (const Byte byte)</td></tr>
<tr class="separator:a1fdfb9bd936d89d3a681694093a01810"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad68259796275df3e1cb79bee39fe0535"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#ad68259796275df3e1cb79bee39fe0535">PutByte</a> (const Byte byte)</td></tr>
<tr class="separator:ad68259796275df3e1cb79bee39fe0535"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a631987573f5ddad263b870e65177ae57"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#a631987573f5ddad263b870e65177ae57">PutBytes</a> (const Byte *bytes, const size_t size)</td></tr>
<tr class="separator:a631987573f5ddad263b870e65177ae57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab059df52a4fc37ea586f63ec7b8c000"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#aab059df52a4fc37ea586f63ec7b8c000">PutBytes</a> (const std::vector&lt; Byte &gt; &amp;bytes)</td></tr>
<tr class="separator:aab059df52a4fc37ea586f63ec7b8c000"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad75592203fb1806bc999266674a1c4ed"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#ad75592203fb1806bc999266674a1c4ed">GetTxFifoSize</a> () const </td></tr>
<tr class="separator:ad75592203fb1806bc999266674a1c4ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a20e87854bed5234afde7ab699e1c8a"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#a5a20e87854bed5234afde7ab699e1c8a">GetRxFifoSize</a> () const </td></tr>
<tr class="separator:a5a20e87854bed5234afde7ab699e1c8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad44a8d05c4086514ffb4afeb2ffa3bd0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#ad44a8d05c4086514ffb4afeb2ffa3bd0">SetEnableTxIrq</a> (const bool flag)</td></tr>
<tr class="memdesc:ad44a8d05c4086514ffb4afeb2ffa3bd0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable Tx/Rx interrupt, by default they are both disabled after initialization and required programmer to explicitly enable them.  <a href="#ad44a8d05c4086514ffb4afeb2ffa3bd0">More...</a><br /></td></tr>
<tr class="separator:ad44a8d05c4086514ffb4afeb2ffa3bd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af05ff14a4ed0d022b66549f77c645e6d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#af05ff14a4ed0d022b66549f77c645e6d">SetEnableRxIrq</a> (const bool flag)</td></tr>
<tr class="separator:af05ff14a4ed0d022b66549f77c645e6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="afb29dd9916bf7eeef4589176deff8a44"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::function&lt;void(<a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml">Uart</a> *uart)&gt; <a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#afb29dd9916bf7eeef4589176deff8a44">libbase::k60::Uart::OnRxFullListener</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ae98fa66c46d52919d72909275577a021"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::function&lt;void(<a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml">Uart</a> *uart)&gt; <a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml#ae98fa66c46d52919d72909275577a021">libbase::k60::Uart::OnTxEmptyListener</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a392f8ded9dc820afbb6e3c780823a052"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">libbase::k60::Uart::Uart </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structlibbase_1_1k60_1_1_uart_1_1_config.xhtml">Config</a> &amp;&#160;</td>
          <td class="paramname"><em>config</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a9a3c1fb5f5f8cdade3b6ed1c0f8afe3b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">libbase::k60::Uart::Uart </td>
          <td>(</td>
          <td class="paramtype">nullptr_t&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a5001429e8da8465521213ffa4df810ed"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">libbase::k60::Uart::Uart </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml">Uart</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="afa71070ad68d14e44e7879ca2a5a407d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">libbase::k60::Uart::Uart </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml">Uart</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a632fb0e0392d7e90a291ced4a6646947"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">libbase::k60::Uart::~Uart </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a3ea0e2a79e80a81145db9050e10ea697"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t libbase::k60::Uart::GetAvailableBytes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="afb8135a823d1b24088e58566825595aa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Byte libbase::k60::Uart::GetByte </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a22fdbc7c3f4dbad98efab2c68d6006a3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;Byte&gt; libbase::k60::Uart::GetBytes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a5a20e87854bed5234afde7ab699e1c8a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t libbase::k60::Uart::GetRxFifoSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ad75592203fb1806bc999266674a1c4ed"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t libbase::k60::Uart::GetTxFifoSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aa8b3240d03ae4bfb649412ce5e8a777e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">libbase::k60::Uart::operator bool </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="acea0cb2af286ece463983251687de673"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml">Uart</a>&amp; libbase::k60::Uart::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml">Uart</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aa4de791529fe596cfbda5913982d9a81"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml">Uart</a>&amp; libbase::k60::Uart::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classlibbase_1_1k60_1_1_uart.xhtml">Uart</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a625e1881f0b718b87c5c815ad35ed30f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool libbase::k60::Uart::PeekByte </td>
          <td>(</td>
          <td class="paramtype">Byte *&#160;</td>
          <td class="paramname"><em>out_byte</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aa14c7bc27524b24df91d9e8ab05bb337"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool libbase::k60::Uart::PeekBytes </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; Byte &gt; *&#160;</td>
          <td class="paramname"><em>out_bytes</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ad68259796275df3e1cb79bee39fe0535"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool libbase::k60::Uart::PutByte </td>
          <td>(</td>
          <td class="paramtype">const Byte&#160;</td>
          <td class="paramname"><em>byte</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a631987573f5ddad263b870e65177ae57"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t libbase::k60::Uart::PutBytes </td>
          <td>(</td>
          <td class="paramtype">const Byte *&#160;</td>
          <td class="paramname"><em>bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aab059df52a4fc37ea586f63ec7b8c000"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t libbase::k60::Uart::PutBytes </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; Byte &gt; &amp;&#160;</td>
          <td class="paramname"><em>bytes</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a1fdfb9bd936d89d3a681694093a01810"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libbase::k60::Uart::SendByte </td>
          <td>(</td>
          <td class="paramtype">const Byte&#160;</td>
          <td class="paramname"><em>byte</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="af05ff14a4ed0d022b66549f77c645e6d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libbase::k60::Uart::SetEnableRxIrq </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>flag</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ad44a8d05c4086514ffb4afeb2ffa3bd0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libbase::k60::Uart::SetEnableTxIrq </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>flag</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable Tx/Rx interrupt, by default they are both disabled after initialization and required programmer to explicitly enable them. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">flag</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2b68687d400955dfa3f06ff151f7eef6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libbase::k60::Uart::SetLoopMode </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>flag</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jan 18 2015 22:13:20 for libsccc by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.8
</small></address>
</body>
</html>
