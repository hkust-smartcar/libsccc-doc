<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.8"/>
<title>libsccc: libutil::Looper Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">libsccc
   &#160;<span id="projectnumber">happy birthday cupcake pre</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.8 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Friends</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacelibutil.xhtml">libutil</a></li><li class="navelem"><a class="el" href="classlibutil_1_1_looper.xhtml">Looper</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">libutil::Looper Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Manage the main loop of a program, and invoke registered functions at the time specified.  
 <a href="classlibutil_1_1_looper.xhtml#details">More...</a></p>

<p><code>#include &lt;looper.h&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a2b28e3aabe38faf2d16364138ca7610a"><td class="memItemLeft" align="right" valign="top">typedef std::function&lt; void(const <br class="typebreak" />
<a class="el" href="classlibsc_1_1_timer.xhtml#a7557f27c9a62a82a8a4dbc84582c7889">libsc::Timer::TimerInt</a> request, <br class="typebreak" />
const <a class="el" href="classlibsc_1_1_timer.xhtml#a7557f27c9a62a82a8a4dbc84582c7889">libsc::Timer::TimerInt</a> <br class="typebreak" />
actual)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibutil_1_1_looper.xhtml#a2b28e3aabe38faf2d16364138ca7610a">Callback</a></td></tr>
<tr class="separator:a2b28e3aabe38faf2d16364138ca7610a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa68eaa54f8bf95adba3d7f54db967df9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibutil_1_1_looper.xhtml#aa68eaa54f8bf95adba3d7f54db967df9">Looper</a> ()</td></tr>
<tr class="separator:aa68eaa54f8bf95adba3d7f54db967df9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe0979a6988b0d7abe1df729f0a88107"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibutil_1_1_looper.xhtml#afe0979a6988b0d7abe1df729f0a88107">~Looper</a> ()</td></tr>
<tr class="separator:afe0979a6988b0d7abe1df729f0a88107"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68e47050b49d92e07565d42d447b8da7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibutil_1_1_looper.xhtml#a68e47050b49d92e07565d42d447b8da7">Loop</a> ()</td></tr>
<tr class="memdesc:a68e47050b49d92e07565d42d447b8da7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start the main loop.  <a href="#a68e47050b49d92e07565d42d447b8da7">More...</a><br /></td></tr>
<tr class="separator:a68e47050b49d92e07565d42d447b8da7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3798da7b6712abac2d7f6c61bc34d6b2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibutil_1_1_looper.xhtml#a3798da7b6712abac2d7f6c61bc34d6b2">Break</a> ()</td></tr>
<tr class="separator:a3798da7b6712abac2d7f6c61bc34d6b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab36527242e323543649d776cbdb19607"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibutil_1_1_looper.xhtml#ab36527242e323543649d776cbdb19607">Once</a> ()</td></tr>
<tr class="memdesc:ab36527242e323543649d776cbdb19607"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the looper once and return immediately.  <a href="#ab36527242e323543649d776cbdb19607">More...</a><br /></td></tr>
<tr class="separator:ab36527242e323543649d776cbdb19607"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c579627fbfb1aae645d963e7755a5c4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibutil_1_1_looper.xhtml#a3c579627fbfb1aae645d963e7755a5c4">RunAfter</a> (const <a class="el" href="classlibsc_1_1_timer.xhtml#a7557f27c9a62a82a8a4dbc84582c7889">libsc::Timer::TimerInt</a> ms, const <a class="el" href="classlibutil_1_1_looper.xhtml#a2b28e3aabe38faf2d16364138ca7610a">Callback</a> &amp;c)</td></tr>
<tr class="separator:a3c579627fbfb1aae645d963e7755a5c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1711c7a34d2790e97836c3d42c55e2a0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibutil_1_1_looper.xhtml#a1711c7a34d2790e97836c3d42c55e2a0">ResetTiming</a> ()</td></tr>
<tr class="memdesc:a1711c7a34d2790e97836c3d42c55e2a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset the internal time.  <a href="#a1711c7a34d2790e97836c3d42c55e2a0">More...</a><br /></td></tr>
<tr class="separator:a1711c7a34d2790e97836c3d42c55e2a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69ba80dd01f19a92117a24940e4a27c0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibutil_1_1_looper.xhtml#a69ba80dd01f19a92117a24940e4a27c0">IsBreak</a> () const </td></tr>
<tr class="memdesc:a69ba80dd01f19a92117a24940e4a27c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return whether <a class="el" href="classlibutil_1_1_looper.xhtml#a3798da7b6712abac2d7f6c61bc34d6b2">Break()</a> has been called.  <a href="#a69ba80dd01f19a92117a24940e4a27c0">More...</a><br /></td></tr>
<tr class="separator:a69ba80dd01f19a92117a24940e4a27c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Manage the main loop of a program, and invoke registered functions at the time specified. </p>
<p>Example: </p><div class="fragment"><div class="line">    Led leds[] = {Led({0, <span class="keyword">true</span>}), Led({1, <span class="keyword">true</span>}), Led({2, <span class="keyword">true</span>}), Led({3, <span class="keyword">true</span>})};</div>
<div class="line">    <span class="keywordtype">int</span> led_id = 0;</div>
<div class="line">    std::function&lt;void(const Timer::TimerInt, const Timer::TimerInt)&gt; blink =</div>
<div class="line">            [&amp;](<span class="keyword">const</span> Timer::TimerInt request, <span class="keyword">const</span> Timer::TimerInt)</div>
<div class="line">            {</div>
<div class="line">                leds[led_id].Switch();</div>
<div class="line">                <span class="keywordflow">if</span> (++led_id &gt;= 4)</div>
<div class="line">                {</div>
<div class="line">                    led_id = 0;</div>
<div class="line">                }</div>
<div class="line"></div>
<div class="line">                looper.RunAfter(request, blink);</div>
<div class="line">            };</div>
<div class="line">    looper.RunAfter(250, blink);</div>
</div><!-- fragment --></div><h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="a2b28e3aabe38faf2d16364138ca7610a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::function&lt;void(const <a class="el" href="classlibsc_1_1_timer.xhtml#a7557f27c9a62a82a8a4dbc84582c7889">libsc::Timer::TimerInt</a> request, const <a class="el" href="classlibsc_1_1_timer.xhtml#a7557f27c9a62a82a8a4dbc84582c7889">libsc::Timer::TimerInt</a> actual)&gt; <a class="el" href="classlibutil_1_1_looper.xhtml#a2b28e3aabe38faf2d16364138ca7610a">libutil::Looper::Callback</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aa68eaa54f8bf95adba3d7f54db967df9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">libutil::Looper::Looper </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="afe0979a6988b0d7abe1df729f0a88107"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">libutil::Looper::~Looper </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a3798da7b6712abac2d7f6c61bc34d6b2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libutil::Looper::Break </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a69ba80dd01f19a92117a24940e4a27c0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool libutil::Looper::IsBreak </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return whether <a class="el" href="classlibutil_1_1_looper.xhtml#a3798da7b6712abac2d7f6c61bc34d6b2">Break()</a> has been called. </p>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

</div>
</div>
<a class="anchor" id="a68e47050b49d92e07565d42d447b8da7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libutil::Looper::Loop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start the main loop. </p>
<p>This method would not return unless <a class="el" href="classlibutil_1_1_looper.xhtml#a3798da7b6712abac2d7f6c61bc34d6b2">Break()</a> is called </p>

</div>
</div>
<a class="anchor" id="ab36527242e323543649d776cbdb19607"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libutil::Looper::Once </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Run the looper once and return immediately. </p>
<p>Mainly used when you want a custom main loop, in that case, you should call <a class="el" href="classlibutil_1_1_looper.xhtml#a1711c7a34d2790e97836c3d42c55e2a0" title="Reset the internal time. ">ResetTiming()</a> first before entering such loop </p>

</div>
</div>
<a class="anchor" id="a1711c7a34d2790e97836c3d42c55e2a0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libutil::Looper::ResetTiming </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reset the internal time. </p>

</div>
</div>
<a class="anchor" id="a3c579627fbfb1aae645d963e7755a5c4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libutil::Looper::RunAfter </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classlibsc_1_1_timer.xhtml#a7557f27c9a62a82a8a4dbc84582c7889">libsc::Timer::TimerInt</a>&#160;</td>
          <td class="paramname"><em>ms</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classlibutil_1_1_looper.xhtml#a2b28e3aabe38faf2d16364138ca7610a">Callback</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Mar 7 2015 21:10:48 for libsccc by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.8
</small></address>
</body>
</html>
