<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.8"/>
<title>libsccc: libsc::k60::UartDevice Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">libsccc
   &#160;<span id="projectnumber">fauxstess cupcake r0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.8 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Friends</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacelibsc.xhtml">libsc</a></li><li class="navelem"><a class="el" href="namespacelibsc_1_1k60.xhtml">k60</a></li><li class="navelem"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml">UartDevice</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">libsc::k60::UartDevice Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;uart_device.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for libsc::k60::UartDevice:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classlibsc_1_1k60_1_1_uart_device__inherit__graph.svg" width="190" height="115"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structlibsc_1_1k60_1_1_uart_device_1_1_config.xhtml">Config</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a421c174eba6d3ba11a8446c0e657f9b3"><td class="memItemLeft" align="right" valign="top">typedef std::function&lt; void(const <br class="typebreak" />
Byte *bytes, const size_t size)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#a421c174eba6d3ba11a8446c0e657f9b3">OnReceiveListener</a></td></tr>
<tr class="separator:a421c174eba6d3ba11a8446c0e657f9b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1b4c00657e91a2520eeaf78c710c6a28"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#a1b4c00657e91a2520eeaf78c710c6a28">UartDevice</a> (const <a class="el" href="structlibsc_1_1k60_1_1_uart_device_1_1_config.xhtml">Config</a> &amp;config)</td></tr>
<tr class="separator:a1b4c00657e91a2520eeaf78c710c6a28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f97a63dd05e6fe2b6f1febc8c2ddb9e"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#a6f97a63dd05e6fe2b6f1febc8c2ddb9e">~UartDevice</a> ()</td></tr>
<tr class="separator:a6f97a63dd05e6fe2b6f1febc8c2ddb9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14b582f24256cf6c5df62b6e64067771"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#a14b582f24256cf6c5df62b6e64067771">SendStr</a> (const char *str)</td></tr>
<tr class="memdesc:a14b582f24256cf6c5df62b6e64067771"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send a string through UART.  <a href="#a14b582f24256cf6c5df62b6e64067771">More...</a><br /></td></tr>
<tr class="separator:a14b582f24256cf6c5df62b6e64067771"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaff53e7340636e1d083c8bc7b20c16b2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#aaff53e7340636e1d083c8bc7b20c16b2">SendStr</a> (std::unique_ptr&lt; char[]&gt; &amp;&amp;str)</td></tr>
<tr class="memdesc:aaff53e7340636e1d083c8bc7b20c16b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send a string through UART.  <a href="#aaff53e7340636e1d083c8bc7b20c16b2">More...</a><br /></td></tr>
<tr class="separator:aaff53e7340636e1d083c8bc7b20c16b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5636a84d8a2fbdcb28861fb454bdc15"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#af5636a84d8a2fbdcb28861fb454bdc15">SendStr</a> (std::string &amp;&amp;str)</td></tr>
<tr class="memdesc:af5636a84d8a2fbdcb28861fb454bdc15"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send a string through UART.  <a href="#af5636a84d8a2fbdcb28861fb454bdc15">More...</a><br /></td></tr>
<tr class="separator:af5636a84d8a2fbdcb28861fb454bdc15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af12f6e3f280b2f9991ec1cc53eb202ff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#af12f6e3f280b2f9991ec1cc53eb202ff">SendBuffer</a> (const Byte *buf, const size_t len)</td></tr>
<tr class="memdesc:af12f6e3f280b2f9991ec1cc53eb202ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send a buffer through UART.  <a href="#af12f6e3f280b2f9991ec1cc53eb202ff">More...</a><br /></td></tr>
<tr class="separator:af12f6e3f280b2f9991ec1cc53eb202ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35a4dfb4f417f038c6dc1e531965ed91"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#a35a4dfb4f417f038c6dc1e531965ed91">SendBuffer</a> (std::unique_ptr&lt; Byte[]&gt; &amp;&amp;buf, const size_t len)</td></tr>
<tr class="memdesc:a35a4dfb4f417f038c6dc1e531965ed91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send a buffer through UART.  <a href="#a35a4dfb4f417f038c6dc1e531965ed91">More...</a><br /></td></tr>
<tr class="separator:a35a4dfb4f417f038c6dc1e531965ed91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac30925b2b16131e3efeeefb8e91a0a50"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#ac30925b2b16131e3efeeefb8e91a0a50">SendBuffer</a> (std::vector&lt; Byte &gt; &amp;&amp;buf)</td></tr>
<tr class="memdesc:ac30925b2b16131e3efeeefb8e91a0a50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send a buffer through UART.  <a href="#ac30925b2b16131e3efeeefb8e91a0a50">More...</a><br /></td></tr>
<tr class="separator:ac30925b2b16131e3efeeefb8e91a0a50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa187c3456f789485acbd2b25917ab997"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#aa187c3456f789485acbd2b25917ab997">SendStrLiteral</a> (const char *str)</td></tr>
<tr class="memdesc:aa187c3456f789485acbd2b25917ab997"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send a string literal through UART.  <a href="#aa187c3456f789485acbd2b25917ab997">More...</a><br /></td></tr>
<tr class="separator:aa187c3456f789485acbd2b25917ab997"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f939585f442f78ae4b2b3022d956406"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#a4f939585f442f78ae4b2b3022d956406">SendStr</a> (const std::string &amp;str)</td></tr>
<tr class="separator:a4f939585f442f78ae4b2b3022d956406"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44df34836824fd3ddc8b9983cd8d9bb2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#a44df34836824fd3ddc8b9983cd8d9bb2">SendBuffer</a> (const std::vector&lt; Byte &gt; &amp;buf)</td></tr>
<tr class="separator:a44df34836824fd3ddc8b9983cd8d9bb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6bca58f445941422f84aac6d6b6c801"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#af6bca58f445941422f84aac6d6b6c801">EnableRx</a> (const <a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#a421c174eba6d3ba11a8446c0e657f9b3">OnReceiveListener</a> &amp;listener)</td></tr>
<tr class="separator:af6bca58f445941422f84aac6d6b6c801"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f0b9581ce0bd717ef19e747fbc0c408"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#a4f0b9581ce0bd717ef19e747fbc0c408">EnableRx</a> ()</td></tr>
<tr class="separator:a4f0b9581ce0bd717ef19e747fbc0c408"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9d678f0cb827e0d19fe93f0dae95e07"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#ac9d678f0cb827e0d19fe93f0dae95e07">DisableRx</a> ()</td></tr>
<tr class="separator:ac9d678f0cb827e0d19fe93f0dae95e07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58e0c2877894c033620f08cbfb33752d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#a58e0c2877894c033620f08cbfb33752d">PeekChar</a> (char *out_char)</td></tr>
<tr class="separator:a58e0c2877894c033620f08cbfb33752d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a720e20f6963f6350710d42bb5f0cdb44"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#a720e20f6963f6350710d42bb5f0cdb44">SetLoopMode</a> (const bool flag)</td></tr>
<tr class="separator:a720e20f6963f6350710d42bb5f0cdb44"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="a421c174eba6d3ba11a8446c0e657f9b3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::function&lt;void(const Byte *bytes, const size_t size)&gt; <a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#a421c174eba6d3ba11a8446c0e657f9b3">libsc::k60::UartDevice::OnReceiveListener</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a1b4c00657e91a2520eeaf78c710c6a28"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">libsc::k60::UartDevice::UartDevice </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structlibsc_1_1k60_1_1_uart_device_1_1_config.xhtml">Config</a> &amp;&#160;</td>
          <td class="paramname"><em>config</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a6f97a63dd05e6fe2b6f1febc8c2ddb9e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual libsc::k60::UartDevice::~UartDevice </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ac9d678f0cb827e0d19fe93f0dae95e07"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libsc::k60::UartDevice::DisableRx </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="af6bca58f445941422f84aac6d6b6c801"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libsc::k60::UartDevice::EnableRx </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classlibsc_1_1k60_1_1_uart_device.xhtml#a421c174eba6d3ba11a8446c0e657f9b3">OnReceiveListener</a> &amp;&#160;</td>
          <td class="paramname"><em>listener</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a4f0b9581ce0bd717ef19e747fbc0c408"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void libsc::k60::UartDevice::EnableRx </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a58e0c2877894c033620f08cbfb33752d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool libsc::k60::UartDevice::PeekChar </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>out_char</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="af12f6e3f280b2f9991ec1cc53eb202ff"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libsc::k60::UartDevice::SendBuffer </td>
          <td>(</td>
          <td class="paramtype">const Byte *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Send a buffer through UART. </p>
<p>A copy will be queued</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td></td></tr>
    <tr><td class="paramname">len</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a35a4dfb4f417f038c6dc1e531965ed91"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libsc::k60::UartDevice::SendBuffer </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; Byte[]&gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Send a buffer through UART. </p>
<p>A moved copy will be queued</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td></td></tr>
    <tr><td class="paramname">len</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac30925b2b16131e3efeeefb8e91a0a50"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libsc::k60::UartDevice::SendBuffer </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; Byte &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>buf</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Send a buffer through UART. </p>
<p>A moved copy will be queued</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a44df34836824fd3ddc8b9983cd8d9bb2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void libsc::k60::UartDevice::SendBuffer </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; Byte &gt; &amp;&#160;</td>
          <td class="paramname"><em>buf</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a14b582f24256cf6c5df62b6e64067771"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libsc::k60::UartDevice::SendStr </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Send a string through UART. </p>
<p>A copy will be queued</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aaff53e7340636e1d083c8bc7b20c16b2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libsc::k60::UartDevice::SendStr </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; char[]&gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Send a string through UART. </p>
<p>A moved copy will be queued</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af5636a84d8a2fbdcb28861fb454bdc15"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libsc::k60::UartDevice::SendStr </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Send a string through UART. </p>
<p>A moved copy will be queued</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a4f939585f442f78ae4b2b3022d956406"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void libsc::k60::UartDevice::SendStr </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aa187c3456f789485acbd2b25917ab997"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libsc::k60::UartDevice::SendStrLiteral </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Send a string literal through UART. </p>
<p>MUST ONLY be used with string literals</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a720e20f6963f6350710d42bb5f0cdb44"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void libsc::k60::UartDevice::SetLoopMode </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>flag</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jan 18 2015 22:13:20 for libsccc by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.8
</small></address>
</body>
</html>
